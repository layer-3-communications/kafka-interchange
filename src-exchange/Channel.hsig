{-# language KindSignatures #-}

signature Channel where

import Data.Kind (Type)
import Data.Int (Int32)
import Data.Text (Text)
import Data.Primitive (ByteArray)
import Data.Bytes.Chunks (Chunks)

import Kafka.Exchange.Error (Error)

-- Includes a resource for communication, almost certainly
-- a network socket.
data M :: Type -> Type
instance Functor M
instance Applicative M
instance Monad M

send ::
     Error -- the error to throw if sending fails
  -> Chunks
  -> M ()
receiveExactly ::
     Error -- the error to throw if reception fails
  -> Int
  -> M ByteArray
nextCorrelationId :: M Int32
clientId :: M Text
throw :: Error -> M a
