{-# language KindSignatures #-}

signature Channel where

import Data.Kind (Type)
import Data.Int (Int32)
import Data.Text (Text)
import Data.Primitive (ByteArray)
import Data.Bytes.Chunks (Chunks)

data M :: Type -> Type

instance Functor M
instance Applicative M
instance Monad M

data Environment :: Type
data Resource :: Type

data ReceiveError :: Type
data SendError :: Type

send ::
     Resource
  -> Chunks
  -> M (Either SendError ())

receiveExactly ::
     Resource
  -> Int
  -> M (Either ReceiveError ByteArray)

-- The environment needs to have an IORef or a PrimVar as one of its
-- fields to implement this.
nextCorrelationId :: Environment -> M Int32
clientId :: Environment -> Text
resource :: Environment -> Resource
